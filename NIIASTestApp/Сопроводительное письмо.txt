Здавствуйте.
В данном письме представлено краткое описание структуры приложения.

1. Созданы 2 окна: MainWindow - главное окно и WindowSlave - дополнительное окно для отображения кратчайшего пути.
2. Для каждого окна добавлен отдельный класс ViewModel: ViewModelMW и ViewModelWS для реализации логики приложения.
3. Добавлен статичекий вспомогательный класс CommonVars, в котором определены общие, 
   разделяемые статические переменные и константы для использования в различных местах приложения.
4. Реализована подсистема команд через классы CommandBase, RelayCommand и RelayCommandT.
5. Добавлен класс АnimationCtors, в котором созданы методы для формирования объектов анимации, 
   для применения к элементам управления.
6. Добавлен класс Logic, для имплементации логики приложения. В данном классе приведен метод, создающий станцию (хардкод).
7. Для описания станции добавлен абстрактный класс Station, определяющий базовый набор переменных, конструкторов и методов.
8. На основе базового Station создан дочерний класс StationTest, в котором реализованы абстрактные методы базового класса,
   а также дополнительные методы.
9. Создан класс Segment, описывающий сущность - участок. 
10. Создан класс Park, описывающий сущность - Парк.
11. Создан класс Node, описывающий сущность - узел. Используется в алгоритме поиска кратчайшего пути.
12. Создан поддерживающий класс StationFuncs, содержащий методы для вычислений различных параметров станции.
13. Добавлен проект NIIASTestApp.Tests, в котором реализованы Юнит тесты.

Я постарался описать все методы и переменные, используемые в приложении, 
а также дать комментарии к реализации логики методов. Готов прокомментировать, если возникнет необходимость. 
С уважением, Антон.
+79898243264. 
https://t.me/odr7n